[{"/Users/lontronix/Developer/react/todoist-clone/src/index.js":"1","/Users/lontronix/Developer/react/todoist-clone/src/App.js":"2","/Users/lontronix/Developer/react/todoist-clone/src/reportWebVitals.js":"3","/Users/lontronix/Developer/react/todoist-clone/src/components/layout/Header.js":"4","/Users/lontronix/Developer/react/todoist-clone/src/components/layout/Sidebar.js":"5","/Users/lontronix/Developer/react/todoist-clone/src/components/layout/Content.js":"6","/Users/lontronix/Developer/react/todoist-clone/src/components/Tasks.js":"7","/Users/lontronix/Developer/react/todoist-clone/src/hooks/index.js":"8","/Users/lontronix/Developer/react/todoist-clone/src/components/Checkbox.js":"9","/Users/lontronix/Developer/react/todoist-clone/src/helpers/index.js":"10","/Users/lontronix/Developer/react/todoist-clone/src/firebase.js":"11"},{"size":219,"mtime":1611523170800,"results":"12","hashOfConfig":"13"},{"size":254,"mtime":1611525625941,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611522798553,"results":"15","hashOfConfig":"13"},{"size":548,"mtime":1611896357276,"results":"16","hashOfConfig":"13"},{"size":1011,"mtime":1611896903896,"results":"17","hashOfConfig":"13"},{"size":191,"mtime":1611880318570,"results":"18","hashOfConfig":"13"},{"size":783,"mtime":1611880757330,"results":"19","hashOfConfig":"13"},{"size":2341,"mtime":1611880657484,"results":"20","hashOfConfig":"13"},{"size":363,"mtime":1611880575529,"results":"21","hashOfConfig":"13"},{"size":120,"mtime":1611536347238,"results":"22","hashOfConfig":"13"},{"size":471,"mtime":1611884797362,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"142azkw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/lontronix/Developer/react/todoist-clone/src/index.js",[],["49","50"],"/Users/lontronix/Developer/react/todoist-clone/src/App.js",[],"/Users/lontronix/Developer/react/todoist-clone/src/reportWebVitals.js",[],"/Users/lontronix/Developer/react/todoist-clone/src/components/layout/Header.js",["51"],"import React from 'react';\nimport {FaPizzaSlice, FAPizzaSlice} from 'react-icons/fa';\n\nexport const Header = () => {\n   return <header className=\"header\" data-testid=\"header\">\n       <nav>\n           <div className=\"logo\">\n               <img src = \"images/logo.png\" alt=\"Todoist Clone\"/>\n           </div>\n           <div className=\"settings\">\n               <ul>\n                   <li className=\"settings__add\">+</li>\n                   <li><FaPizzaSlice></FaPizzaSlice></li>\n               </ul>\n           </div>\n       </nav>\n   </header>\n};\n","/Users/lontronix/Developer/react/todoist-clone/src/components/layout/Sidebar.js",[],"/Users/lontronix/Developer/react/todoist-clone/src/components/layout/Content.js",[],"/Users/lontronix/Developer/react/todoist-clone/src/components/Tasks.js",[],"/Users/lontronix/Developer/react/todoist-clone/src/hooks/index.js",["52","53"],"import moment from 'moment';\nimport { useState, useEffect } from 'react';\nimport { firebase } from '../firebase';\nimport { collatedTasksExist } from '../helpers'\n\nexport const useTasks = selectedProject => {\n    const [tasks, setTasks] = useState([]);\n    const [archivedTasks, setArchivedTasks] = useState([]);\n\nconst collatedTasksExist = () => {};\n\nuseEffect(() => {\n    let unsubscribe = firebase\n      .firestore()\n      .collection('tasks')\n      .where('userID', '==', 'lontronix');\n\n    unsubscribe =\n      selectedProject && !collatedTasksExist(selectedProject)\n        ? (unsubscribe = unsubscribe.where('projectID', '==', selectedProject))\n        : selectedProject === 'TODAY'\n        ? (unsubscribe = unsubscribe.where(\n            'date',\n            '==',\n            moment().format('DD/MM/YYYY')\n          ))\n        : selectedProject === 'INBOX' || selectedProject === 0\n        ? (unsubscribe = unsubscribe.where('date', '==', ''))\n        : unsubscribe;\n\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\n      const newTasks = snapshot.docs.map(task => ({\n        id: task.id,\n        ...task.data(),\n      }));\n\n      setTasks(\n        selectedProject === 'NEXT_7'\n          ? newTasks.filter(\n              task =>\n                moment(task.date, 'DD-MM-YYYY').diff(moment(), 'days') <= 7 &&\n                task.archived !== true\n            )\n          : newTasks.filter(task => task.archived !== true)\n      );\n      setArchivedTasks(newTasks.filter(task => task.archived !== false));\n    });\n\n    return () => unsubscribe();\n  }, [selectedProject]);\n\n  return { tasks, archivedTasks };\n};\n\nexport const useProjects = () => {\n    const [projects, setProjects] = useState([]);\n\n    useEffect( () => {\n        firebase\n            .firestore()\n            .collection('projects')\n            .where('userID', '==', 'lontronix')\n            .orderBy('projectID')\n            .get()\n            .then(snapshot => {\n                const allProjects = snapshot.docs.map(project => ({\n                    ...project.data(),\n                    docId: project.id,\n                }));\n\n                if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\n                    setProjects(allProjects);\n                }\n            }, [projects]);\n\n            return {projects, setProjects };\n\n    });\n};\n","/Users/lontronix/Developer/react/todoist-clone/src/components/Checkbox.js",[],"/Users/lontronix/Developer/react/todoist-clone/src/helpers/index.js",[],"/Users/lontronix/Developer/react/todoist-clone/src/firebase.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":23,"nodeType":"60","messageId":"61","endLine":2,"endColumn":35},{"ruleId":"58","severity":1,"message":"62","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":28},{"ruleId":"63","severity":1,"message":"64","line":58,"column":5,"nodeType":"60","endLine":58,"endColumn":14,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'FAPizzaSlice' is defined but never used.","Identifier","unusedVar","'collatedTasksExist' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setProjects'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [projects] as a second argument to the useEffect Hook.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Add dependencies array: [projects]",{"range":"71","text":"72"},[2335,2335],", [projects]"]